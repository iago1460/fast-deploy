#!/usr/bin/env bash

set -e
set -x


function help() {
    cat << EOF
usage: $0 [OPTIONS]

Setup tools.

OPTIONS:
  help            Show this message
  init            Download and setup dependencies
  render_config   Render the config_template folder
  flash_sd        Flash the sd card
  flash_sd_wifi   Flash the sd card with wifi support
  backup          Import the config from the remote system
  export_config   Renders and exports the config to the target system

EOF
  exit 1
}

CONFIG_TEMPLATE_PATH=$(pwd)/config_template
CONFIG_PATH=${TMP_PATH}/config
VAR_FILE_PATH=$(pwd)/.env


function init() {
    rm -rf ${TMP_PATH}
    mkdir ${TMP_PATH}
    mkdir -p backup
    docker pull ${DOCKER_IMAGE_CONFIGURER}
    wget -O ${TMP_PATH}/flash ${FLASH_SCRIPT}
    chmod +x ${TMP_PATH}/flash
    wget -O ${TMP_PATH}/hypriotos.zip ${HYPRIOTOS_IMAGE}
    unzip ${TMP_PATH}/hypriotos.zip -d ${TMP_PATH}
    mv ${TMP_PATH}/hypriotos-*.img ${TMP_PATH}/hypriotos.img
    touch ${TMP_PATH}/acme.json
    chmod 600 ${TMP_PATH}/acme.json
    touch ${TMP_PATH}/home-assistant.log

    # mkdir -p ${TMP_PATH}/config/pihole/data
    # mkdir -p ${TMP_PATH}/config/pihole/dnsmasq
    # mkdir -p ${TMP_PATH/config}/pihole/log
    touch ${TMP_PATH}/pihole.log

    render_config
}

function render_config() {
    docker run --rm --volume $CONFIG_TEMPLATE_PATH:/source:ro --volume $CONFIG_PATH:/output --volume $VAR_FILE_PATH:/vars/var_file:ro iago1460/configurer "$@"
}

function flash_sd() {
    ${TMP_PATH}/flash --bootconf ${CONFIG_PATH}/hypriot/bootconf.txt --userdata ${CONFIG_PATH}/hypriot/cloud_init.yml ${TMP_PATH}/hypriotos.img
}

function flash_sd_wifi() {
    ${TMP_PATH}/flash --bootconf ${CONFIG_PATH}/hypriot/bootconf.txt --userdata ${CONFIG_PATH}/hypriot/cloud_init_wifi.yml --config ${CONFIG_PATH}/hypriot/device_init.yml ${TMP_PATH}/hypriotos.img
}

function backup() {
    rsync -r -a -v --delete -e ssh --rsync-path="sudo rsync" ${USERNAME}@${HOST_IP}:/home/${USERNAME}/workspace/config/ ./backup/${HOST_IP}-$(date '+%Y-%m-%d')/
    echo "Data imported"
}


function export_config() {
    render_config

    rsync -a --no-o --no-g -v -z -e ssh ./docker-compose.yml ./.env ${USERNAME}@${HOST_IP}:/home/${USERNAME}/workspace/
    rsync -a --no-o --no-g -r -v -e ssh ${CONFIG_PATH}/ ${USERNAME}@${HOST_IP}:/home/${USERNAME}/workspace/config/
    # copy acme.json if it's not present
    rsync --ignore-existing -a --no-o --no-g -v -z -e ssh ${TMP_PATH}/acme.json ${USERNAME}@${HOST_IP}:/home/${USERNAME}/workspace/config/traefik/
    # copy home-assistant.log if it's not present
    rsync --ignore-existing -a --no-o --no-g -v -z -e ssh ${TMP_PATH}/home-assistant.log ${USERNAME}@${HOST_IP}:/home/${USERNAME}/workspace/config/homeassistant/
    # copy .bash_profile if it's not present
    rsync --ignore-existing -a --no-o --no-g -v -z -e ssh ${TMP_PATH}/config/hypriot/.bash_profile ${USERNAME}@${HOST_IP}:/home/${USERNAME}/
    # copy .pihole.log if it's not present
    rsync --ignore-existing -a --no-o --no-g -v -z -e ssh ${TMP_PATH}/pihole.log ${USERNAME}@${HOST_IP}:/home/${USERNAME}/workspace/config/pihole/log/

    echo "Config exported"
}


# Run user entered command at app level, or fallback to docker-compose
if [ "$(type -t $1)" == 'function' ]; then
    func=$1
    shift
    $func "$@"
else
    echo "Unknown command"
    help
fi
exit $?